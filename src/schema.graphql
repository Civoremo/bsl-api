type Query {
	info: String!
	me: User
	allUsers: [User!]!
	allLeagues: [League!]!
	allTeams: [Team!]!
	allGames: [Game!]!
	allPlayers: [Player!]!
	league(id: ID!): League
	team(id: ID!): Team
	player(id: ID!): Player
	game(id: ID!): Game
}

type Mutation {
	post: String!
	signup(name: String!, email: String!, password: String!): AuthPayload!
	login(email: String!, password: String!): AuthPayload!
	postLeague(name: String!, location: String!): League
	postTeam(name: String!, leagueId: String!): Team
	postPlayer(name: String!, teamId: String!): Player
	postGame(
		homeTeam: String!
		awayTeam: String!
		leagueId: String!
		day: String!
		time: String
		score: String
		videoURL: String
	): Game
}

type AuthPayload {
	token: String!
	user: User!
}

type Team {
	id: ID!
	name: String!
	wins: [Win!]!
	losses: [Loss!]!
	players: [Player!]!
	league: League!
	postedBy: User!
	games: [Game!]!
}

type Player {
	id: ID!
	name: String!
	played: Int!
	goals: Int!
	assists: Int!
	saves: Int!
	postedBy: User!
	team: Team!
}

type Win {
	id: ID!
	team: Team!
	game: [Game!]!
}

type Loss {
	id: ID!
	team: Team!
	game: [Game!]!
}

type Game {
	id: ID!
	day: String!
	homeTeam: Team!
	awayTeam: Team!
	score: String!
	time: String!
	videoURL: String!
	postedBy: User!
	league: League!
}

type League {
	id: ID!
	teams: [Team!]!
	location: String!
	name: String!
	postedBy: User!
	games: [Game!]!
}

type User {
	id: ID!
	name: String!
	email: String!
	leagues: [League!]!
	teams: [Team!]!
	games: [Game!]!
	players: [Player!]!
}
